{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Mock KYC data including Kenyan ID details\nconst mockKYCData = [{\n  id: \"123e4567-e89b-12d3-a456-426614174000\",\n  status: \"pending\",\n  userName: \"John Kimani\",\n  userEmail: \"john@example.com\",\n  userPhone: \"+254722123456\",\n  verificationType: \"idCard\",\n  remarks: \"\",\n  createdAt: \"2023-10-01T12:00:00Z\",\n  updatedAt: \"2023-10-01T12:00:00Z\",\n  nationalId: {\n    idNumber: \"12345678\",\n    serialNumber: \"A123456\",\n    fullName: \"JOHN KIMANI NDEGWA\",\n    dateOfBirth: \"1990-01-01\",\n    gender: \"MALE\",\n    districtOfBirth: \"NAIROBI\",\n    placeOfIssue: \"NAIROBI\",\n    dateOfIssue: \"2015-01-01\",\n    extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: A123456\\nID No: 12345678\\nFull Names: JOHN KIMANI NDEGWA\\nSex: MALE\\nDate of Birth: 01.01.1990\\nDistrict of Birth: NAIROBI\\nPlace of Issue: NAIROBI\\nDate of Issue: 01.01.2015\\nSignature: [Signature]\"\n  },\n  documents: [{\n    documentType: \"ID Front\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front\"\n  }, {\n    documentType: \"ID Back\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back\"\n  }],\n  livenessCheck: {\n    status: \"passed\",\n    confidence: 0.95,\n    frames: [{\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1\",\n      timestamp: \"2023-10-01T12:00:10Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2\",\n      timestamp: \"2023-10-01T12:00:15Z\"\n    }]\n  }\n}, {\n  id: \"223e4567-e89b-12d3-a456-426614174001\",\n  status: \"approved\",\n  userName: \"Mary Wanjiru\",\n  userEmail: \"mary@example.com\",\n  userPhone: \"+254733987654\",\n  verificationType: \"idCard\",\n  remarks: \"All documents verified successfully\",\n  createdAt: \"2023-09-28T10:30:00Z\",\n  updatedAt: \"2023-09-29T14:15:00Z\",\n  nationalId: {\n    idNumber: \"87654321\",\n    serialNumber: \"B654321\",\n    fullName: \"MARY WANJIRU KAMAU\",\n    dateOfBirth: \"1985-05-15\",\n    gender: \"FEMALE\",\n    districtOfBirth: \"KIAMBU\",\n    placeOfIssue: \"NAIROBI\",\n    dateOfIssue: \"2012-06-20\",\n    extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: B654321\\nID No: 87654321\\nFull Names: MARY WANJIRU KAMAU\\nSex: FEMALE\\nDate of Birth: 15.05.1985\\nDistrict of Birth: KIAMBU\\nPlace of Issue: NAIROBI\\nDate of Issue: 20.06.2012\\nSignature: [Signature]\"\n  },\n  documents: [{\n    documentType: \"ID Front\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Mary\"\n  }, {\n    documentType: \"ID Back\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Mary\"\n  }],\n  livenessCheck: {\n    status: \"passed\",\n    confidence: 0.98,\n    frames: [{\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Mary\",\n      timestamp: \"2023-09-28T10:31:00Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Mary\",\n      timestamp: \"2023-09-28T10:31:05Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+3+Mary\",\n      timestamp: \"2023-09-28T10:31:10Z\"\n    }]\n  }\n}, {\n  id: \"323e4567-e89b-12d3-a456-426614174002\",\n  status: \"rejected\",\n  userName: \"Peter Ochieng\",\n  userEmail: \"peter@example.com\",\n  userPhone: \"+254711456789\",\n  verificationType: \"idCard\",\n  remarks: \"ID appears to be tampered with. Liveness check failed.\",\n  createdAt: \"2023-09-25T09:15:00Z\",\n  updatedAt: \"2023-09-26T11:20:00Z\",\n  nationalId: {\n    idNumber: \"23456789\",\n    serialNumber: \"C789012\",\n    fullName: \"PETER OCHIENG OMONDI\",\n    dateOfBirth: \"1992-11-30\",\n    gender: \"MALE\",\n    districtOfBirth: \"KISUMU\",\n    placeOfIssue: \"KISUMU\",\n    dateOfIssue: \"2017-03-15\",\n    extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: C789012\\nID No: 23456789\\nFull Names: PETER OCHIENG OMONDI\\nSex: MALE\\nDate of Birth: 30.11.1992\\nDistrict of Birth: KISUMU\\nPlace of Issue: KISUMU\\nDate of Issue: 15.03.2017\\nSignature: [Signature]\"\n  },\n  documents: [{\n    documentType: \"ID Front\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Peter\"\n  }, {\n    documentType: \"ID Back\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Peter\"\n  }],\n  livenessCheck: {\n    status: \"failed\",\n    confidence: 0.45,\n    frames: [{\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Peter\",\n      timestamp: \"2023-09-25T09:16:00Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Peter\",\n      timestamp: \"2023-09-25T09:16:05Z\"\n    }]\n  }\n}, {\n  id: \"423e4567-e89b-12d3-a456-426614174003\",\n  status: \"pending\",\n  userName: \"Sarah Njeri\",\n  userEmail: \"sarah@example.com\",\n  userPhone: \"+254700123456\",\n  verificationType: \"idCard\",\n  remarks: \"\",\n  createdAt: \"2023-10-02T14:20:00Z\",\n  updatedAt: \"2023-10-02T14:20:00Z\",\n  nationalId: {\n    idNumber: \"34567890\",\n    serialNumber: \"D890123\",\n    fullName: \"SARAH NJERI MWANGI\",\n    dateOfBirth: \"1988-07-22\",\n    gender: \"FEMALE\",\n    districtOfBirth: \"NYERI\",\n    placeOfIssue: \"NYERI\",\n    dateOfIssue: \"2014-09-10\",\n    extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: D890123\\nID No: 34567890\\nFull Names: SARAH NJERI MWANGI\\nSex: FEMALE\\nDate of Birth: 22.07.1988\\nDistrict of Birth: NYERI\\nPlace of Issue: NYERI\\nDate of Issue: 10.09.2014\\nSignature: [Signature]\"\n  },\n  documents: [{\n    documentType: \"ID Front\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Sarah\"\n  }, {\n    documentType: \"ID Back\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Sarah\"\n  }],\n  livenessCheck: {\n    status: \"passed\",\n    confidence: 0.92,\n    frames: [{\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Sarah\",\n      timestamp: \"2023-10-02T14:21:00Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Sarah\",\n      timestamp: \"2023-10-02T14:21:05Z\"\n    }]\n  }\n}, {\n  id: \"523e4567-e89b-12d3-a456-426614174004\",\n  status: \"pending\",\n  userName: \"David Mutua\",\n  userEmail: \"david@example.com\",\n  userPhone: \"+254755789012\",\n  verificationType: \"idCard\",\n  remarks: \"\",\n  createdAt: \"2023-10-03T09:45:00Z\",\n  updatedAt: \"2023-10-03T09:45:00Z\",\n  nationalId: {\n    idNumber: \"45678901\",\n    serialNumber: \"E901234\",\n    fullName: \"DAVID MUTUA MUSYOKA\",\n    dateOfBirth: \"1995-03-18\",\n    gender: \"MALE\",\n    districtOfBirth: \"MACHAKOS\",\n    placeOfIssue: \"MACHAKOS\",\n    dateOfIssue: \"2019-02-05\",\n    extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: E901234\\nID No: 45678901\\nFull Names: DAVID MUTUA MUSYOKA\\nSex: MALE\\nDate of Birth: 18.03.1995\\nDistrict of Birth: MACHAKOS\\nPlace of Issue: MACHAKOS\\nDate of Issue: 05.02.2019\\nSignature: [Signature]\"\n  },\n  documents: [{\n    documentType: \"ID Front\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+David\"\n  }, {\n    documentType: \"ID Back\",\n    imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+David\"\n  }],\n  livenessCheck: {\n    status: \"passed\",\n    confidence: 0.96,\n    frames: [{\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+David\",\n      timestamp: \"2023-10-03T09:46:00Z\"\n    }, {\n      imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+David\",\n      timestamp: \"2023-10-03T09:46:05Z\"\n    }]\n  }\n}];\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle token expiration\nAPI.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth services\nexport const authService = {\n  login: async (email, password) => {\n    try {\n      // Mock login for development without backend\n      if (email === 'user' && password === 'password') {\n        const mockResponse = {\n          token: 'mock-jwt-token',\n          user: {\n            id: '1',\n            name: 'Test User',\n            email: 'user',\n            role: 'admin'\n          }\n        };\n        localStorage.setItem('token', mockResponse.token);\n        localStorage.setItem('user', JSON.stringify(mockResponse.user));\n        return mockResponse;\n      }\n\n      // If credentials don't match the hardcoded ones, throw an error\n      throw {\n        response: {\n          data: {\n            message: 'Invalid credentials. Use username \"user\" and password \"password\".'\n          }\n        }\n      };\n\n      // This code will run when you have a backend\n      // const response = await API.post('/auth/login', { email, password });\n      // if (response.data.token) {\n      //   localStorage.setItem('token', response.data.token);\n      // }\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: async () => {\n    try {\n      // Mock user data for development without backend\n      const user = localStorage.getItem('user');\n      if (user) {\n        return JSON.parse(user);\n      }\n\n      // This code will run when you have a backend\n      // const response = await API.get('/auth/me');\n      // return response.data;\n\n      throw new Error('Not authenticated');\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// KYC services\nexport const kycService = {\n  getAll: async (params = {}) => {\n    try {\n      const response = await API.get('/kyc', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await API.get(`/kyc/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateStatus: async (id, status, remarks) => {\n    try {\n      const response = await API.patch(`/kyc/${id}/status`, {\n        status,\n        remarks\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// Analytics services\nexport const analyticsService = {\n  getDashboardStats: async () => {\n    try {\n      const response = await API.get('/analytics/dashboard');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getVerificationStats: async (params = {}) => {\n    try {\n      const response = await API.get('/analytics/verifications', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default {\n  authService,\n  kycService,\n  analyticsService\n};","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","mockKYCData","id","status","userName","userEmail","userPhone","verificationType","remarks","createdAt","updatedAt","nationalId","idNumber","serialNumber","fullName","dateOfBirth","gender","districtOfBirth","placeOfIssue","dateOfIssue","extractedText","documents","documentType","imageUrl","livenessCheck","confidence","frames","timestamp","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","removeItem","window","location","href","authService","login","email","password","mockResponse","user","name","role","setItem","JSON","stringify","data","message","logout","getCurrentUser","parse","Error","kycService","getAll","params","get","getById","updateStatus","patch","analyticsService","getDashboardStats","getVerificationStats"],"sources":["/Users/akasozi/Documents/web-apps/ekyc-dashboard/ekyc-dashboard/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Mock KYC data including Kenyan ID details\nconst mockKYCData = [\n  {\n    id: \"123e4567-e89b-12d3-a456-426614174000\",\n    status: \"pending\",\n    userName: \"John Kimani\",\n    userEmail: \"john@example.com\",\n    userPhone: \"+254722123456\",\n    verificationType: \"idCard\",\n    remarks: \"\",\n    createdAt: \"2023-10-01T12:00:00Z\",\n    updatedAt: \"2023-10-01T12:00:00Z\",\n    nationalId: {\n      idNumber: \"12345678\",\n      serialNumber: \"A123456\",\n      fullName: \"JOHN KIMANI NDEGWA\",\n      dateOfBirth: \"1990-01-01\",\n      gender: \"MALE\",\n      districtOfBirth: \"NAIROBI\",\n      placeOfIssue: \"NAIROBI\",\n      dateOfIssue: \"2015-01-01\",\n      extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: A123456\\nID No: 12345678\\nFull Names: JOHN KIMANI NDEGWA\\nSex: MALE\\nDate of Birth: 01.01.1990\\nDistrict of Birth: NAIROBI\\nPlace of Issue: NAIROBI\\nDate of Issue: 01.01.2015\\nSignature: [Signature]\",\n    },\n    documents: [\n      {\n        documentType: \"ID Front\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front\"\n      },\n      {\n        documentType: \"ID Back\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back\"\n      }\n    ],\n    livenessCheck: {\n      status: \"passed\",\n      confidence: 0.95,\n      frames: [\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1\",\n          timestamp: \"2023-10-01T12:00:10Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2\",\n          timestamp: \"2023-10-01T12:00:15Z\"\n        }\n      ]\n    }\n  },\n  {\n    id: \"223e4567-e89b-12d3-a456-426614174001\",\n    status: \"approved\",\n    userName: \"Mary Wanjiru\",\n    userEmail: \"mary@example.com\",\n    userPhone: \"+254733987654\",\n    verificationType: \"idCard\",\n    remarks: \"All documents verified successfully\",\n    createdAt: \"2023-09-28T10:30:00Z\",\n    updatedAt: \"2023-09-29T14:15:00Z\",\n    nationalId: {\n      idNumber: \"87654321\",\n      serialNumber: \"B654321\",\n      fullName: \"MARY WANJIRU KAMAU\",\n      dateOfBirth: \"1985-05-15\",\n      gender: \"FEMALE\",\n      districtOfBirth: \"KIAMBU\",\n      placeOfIssue: \"NAIROBI\",\n      dateOfIssue: \"2012-06-20\",\n      extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: B654321\\nID No: 87654321\\nFull Names: MARY WANJIRU KAMAU\\nSex: FEMALE\\nDate of Birth: 15.05.1985\\nDistrict of Birth: KIAMBU\\nPlace of Issue: NAIROBI\\nDate of Issue: 20.06.2012\\nSignature: [Signature]\",\n    },\n    documents: [\n      {\n        documentType: \"ID Front\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Mary\"\n      },\n      {\n        documentType: \"ID Back\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Mary\"\n      }\n    ],\n    livenessCheck: {\n      status: \"passed\",\n      confidence: 0.98,\n      frames: [\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Mary\",\n          timestamp: \"2023-09-28T10:31:00Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Mary\",\n          timestamp: \"2023-09-28T10:31:05Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+3+Mary\",\n          timestamp: \"2023-09-28T10:31:10Z\"\n        }\n      ]\n    }\n  },\n  {\n    id: \"323e4567-e89b-12d3-a456-426614174002\",\n    status: \"rejected\",\n    userName: \"Peter Ochieng\",\n    userEmail: \"peter@example.com\",\n    userPhone: \"+254711456789\",\n    verificationType: \"idCard\",\n    remarks: \"ID appears to be tampered with. Liveness check failed.\",\n    createdAt: \"2023-09-25T09:15:00Z\",\n    updatedAt: \"2023-09-26T11:20:00Z\",\n    nationalId: {\n      idNumber: \"23456789\",\n      serialNumber: \"C789012\",\n      fullName: \"PETER OCHIENG OMONDI\",\n      dateOfBirth: \"1992-11-30\",\n      gender: \"MALE\",\n      districtOfBirth: \"KISUMU\",\n      placeOfIssue: \"KISUMU\",\n      dateOfIssue: \"2017-03-15\",\n      extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: C789012\\nID No: 23456789\\nFull Names: PETER OCHIENG OMONDI\\nSex: MALE\\nDate of Birth: 30.11.1992\\nDistrict of Birth: KISUMU\\nPlace of Issue: KISUMU\\nDate of Issue: 15.03.2017\\nSignature: [Signature]\",\n    },\n    documents: [\n      {\n        documentType: \"ID Front\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Peter\"\n      },\n      {\n        documentType: \"ID Back\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Peter\"\n      }\n    ],\n    livenessCheck: {\n      status: \"failed\",\n      confidence: 0.45,\n      frames: [\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Peter\",\n          timestamp: \"2023-09-25T09:16:00Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Peter\",\n          timestamp: \"2023-09-25T09:16:05Z\"\n        }\n      ]\n    }\n  },\n  {\n    id: \"423e4567-e89b-12d3-a456-426614174003\",\n    status: \"pending\",\n    userName: \"Sarah Njeri\",\n    userEmail: \"sarah@example.com\",\n    userPhone: \"+254700123456\",\n    verificationType: \"idCard\",\n    remarks: \"\",\n    createdAt: \"2023-10-02T14:20:00Z\",\n    updatedAt: \"2023-10-02T14:20:00Z\",\n    nationalId: {\n      idNumber: \"34567890\",\n      serialNumber: \"D890123\",\n      fullName: \"SARAH NJERI MWANGI\",\n      dateOfBirth: \"1988-07-22\",\n      gender: \"FEMALE\",\n      districtOfBirth: \"NYERI\",\n      placeOfIssue: \"NYERI\",\n      dateOfIssue: \"2014-09-10\",\n      extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: D890123\\nID No: 34567890\\nFull Names: SARAH NJERI MWANGI\\nSex: FEMALE\\nDate of Birth: 22.07.1988\\nDistrict of Birth: NYERI\\nPlace of Issue: NYERI\\nDate of Issue: 10.09.2014\\nSignature: [Signature]\",\n    },\n    documents: [\n      {\n        documentType: \"ID Front\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+Sarah\"\n      },\n      {\n        documentType: \"ID Back\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+Sarah\"\n      }\n    ],\n    livenessCheck: {\n      status: \"passed\",\n      confidence: 0.92,\n      frames: [\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+Sarah\",\n          timestamp: \"2023-10-02T14:21:00Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+Sarah\",\n          timestamp: \"2023-10-02T14:21:05Z\"\n        }\n      ]\n    }\n  },\n  {\n    id: \"523e4567-e89b-12d3-a456-426614174004\",\n    status: \"pending\",\n    userName: \"David Mutua\",\n    userEmail: \"david@example.com\",\n    userPhone: \"+254755789012\",\n    verificationType: \"idCard\",\n    remarks: \"\",\n    createdAt: \"2023-10-03T09:45:00Z\",\n    updatedAt: \"2023-10-03T09:45:00Z\",\n    nationalId: {\n      idNumber: \"45678901\",\n      serialNumber: \"E901234\",\n      fullName: \"DAVID MUTUA MUSYOKA\",\n      dateOfBirth: \"1995-03-18\",\n      gender: \"MALE\",\n      districtOfBirth: \"MACHAKOS\",\n      placeOfIssue: \"MACHAKOS\",\n      dateOfIssue: \"2019-02-05\",\n      extractedText: \"REPUBLIC OF KENYA\\nNATIONAL IDENTITY CARD\\nSerial No: E901234\\nID No: 45678901\\nFull Names: DAVID MUTUA MUSYOKA\\nSex: MALE\\nDate of Birth: 18.03.1995\\nDistrict of Birth: MACHAKOS\\nPlace of Issue: MACHAKOS\\nDate of Issue: 05.02.2019\\nSignature: [Signature]\",\n    },\n    documents: [\n      {\n        documentType: \"ID Front\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Front+David\"\n      },\n      {\n        documentType: \"ID Back\",\n        imageUrl: \"https://via.placeholder.com/400x250?text=Kenya+ID+Back+David\"\n      }\n    ],\n    livenessCheck: {\n      status: \"passed\",\n      confidence: 0.96,\n      frames: [\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+1+David\",\n          timestamp: \"2023-10-03T09:46:00Z\"\n        },\n        {\n          imageUrl: \"https://via.placeholder.com/300x300?text=Liveness+Frame+2+David\",\n          timestamp: \"2023-10-03T09:46:05Z\"\n        }\n      ]\n    }\n  }\n];\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle token expiration\nAPI.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth services\nexport const authService = {\n  login: async (email, password) => {\n    try {\n      // Mock login for development without backend\n      if (email === 'user' && password === 'password') {\n        const mockResponse = {\n          token: 'mock-jwt-token',\n          user: {\n            id: '1',\n            name: 'Test User',\n            email: 'user',\n            role: 'admin'\n          }\n        };\n        localStorage.setItem('token', mockResponse.token);\n        localStorage.setItem('user', JSON.stringify(mockResponse.user));\n        return mockResponse;\n      }\n      \n      // If credentials don't match the hardcoded ones, throw an error\n      throw {\n        response: {\n          data: {\n            message: 'Invalid credentials. Use username \"user\" and password \"password\".'\n          }\n        }\n      };\n      \n      // This code will run when you have a backend\n      // const response = await API.post('/auth/login', { email, password });\n      // if (response.data.token) {\n      //   localStorage.setItem('token', response.data.token);\n      // }\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: async () => {\n    try {\n      // Mock user data for development without backend\n      const user = localStorage.getItem('user');\n      if (user) {\n        return JSON.parse(user);\n      }\n      \n      // This code will run when you have a backend\n      // const response = await API.get('/auth/me');\n      // return response.data;\n      \n      throw new Error('Not authenticated');\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n// KYC services\nexport const kycService = {\n  getAll: async (params = {}) => {\n    try {\n      const response = await API.get('/kyc', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async (id) => {\n    try {\n      const response = await API.get(`/kyc/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateStatus: async (id, status, remarks) => {\n    try {\n      const response = await API.patch(`/kyc/${id}/status`, { status, remarks });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n// Analytics services\nexport const analyticsService = {\n  getDashboardStats: async () => {\n    try {\n      const response = await API.get('/analytics/dashboard');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getVerificationStats: async (params = {}) => {\n    try {\n      const response = await API.get('/analytics/verifications', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default {\n  authService,\n  kycService,\n  analyticsService,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}