{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle token expiration\nAPI.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth services\nexport const authService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await API.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// KYC services\nexport const kycService = {\n  getAll: async (params = {}) => {\n    try {\n      const response = await API.get('/kyc', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await API.get(`/kyc/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateStatus: async (id, status, remarks) => {\n    try {\n      const response = await API.patch(`/kyc/${id}/status`, {\n        status,\n        remarks\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// Analytics services\nexport const analyticsService = {\n  getDashboardStats: async () => {\n    try {\n      const response = await API.get('/analytics/dashboard');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getVerificationStats: async (params = {}) => {\n    try {\n      const response = await API.get('/analytics/verifications', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default {\n  authService,\n  kycService,\n  analyticsService\n};","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","authService","login","email","password","post","data","setItem","logout","getCurrentUser","get","kycService","getAll","params","getById","id","updateStatus","remarks","patch","analyticsService","getDashboardStats","getVerificationStats"],"sources":["/Users/akasozi/Documents/web-apps/ekyc-dashboard/ekyc-dashboard/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle token expiration\nAPI.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth services\nexport const authService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/auth/login', { email, password });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await API.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n// KYC services\nexport const kycService = {\n  getAll: async (params = {}) => {\n    try {\n      const response = await API.get('/kyc', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async (id) => {\n    try {\n      const response = await API.get(`/kyc/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateStatus: async (id, status, remarks) => {\n    try {\n      const response = await API.patch(`/kyc/${id}/status`, { status, remarks });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n// Analytics services\nexport const analyticsService = {\n  getDashboardStats: async () => {\n    try {\n      const response = await API.get('/analytics/dashboard');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getVerificationStats: async (params = {}) => {\n    try {\n      const response = await API.get('/analytics/verifications', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default {\n  authService,\n  kycService,\n  analyticsService,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}